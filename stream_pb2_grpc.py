# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import stream_pb2 as stream__pb2


class VideoStreamStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ImgStreaming = channel.unary_unary(
                '/VideoStream/ImgStreaming',
                request_serializer=stream__pb2.MsgRequest.SerializeToString,
                response_deserializer=stream__pb2.Empty.FromString,
                )
        self.ImgGetting = channel.unary_unary(
                '/VideoStream/ImgGetting',
                request_serializer=stream__pb2.Identity.SerializeToString,
                response_deserializer=stream__pb2.MsgReply.FromString,
                )
        self.Register = channel.unary_unary(
                '/VideoStream/Register',
                request_serializer=stream__pb2.Identity.SerializeToString,
                response_deserializer=stream__pb2.Empty.FromString,
                )
        self.CheckList = channel.unary_unary(
                '/VideoStream/CheckList',
                request_serializer=stream__pb2.Empty.SerializeToString,
                response_deserializer=stream__pb2.Identity.FromString,
                )


class VideoStreamServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ImgStreaming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ImgGetting(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Register(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VideoStreamServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ImgStreaming': grpc.unary_unary_rpc_method_handler(
                    servicer.ImgStreaming,
                    request_deserializer=stream__pb2.MsgRequest.FromString,
                    response_serializer=stream__pb2.Empty.SerializeToString,
            ),
            'ImgGetting': grpc.unary_unary_rpc_method_handler(
                    servicer.ImgGetting,
                    request_deserializer=stream__pb2.Identity.FromString,
                    response_serializer=stream__pb2.MsgReply.SerializeToString,
            ),
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=stream__pb2.Identity.FromString,
                    response_serializer=stream__pb2.Empty.SerializeToString,
            ),
            'CheckList': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckList,
                    request_deserializer=stream__pb2.Empty.FromString,
                    response_serializer=stream__pb2.Identity.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'VideoStream', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VideoStream(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ImgStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VideoStream/ImgStreaming',
            stream__pb2.MsgRequest.SerializeToString,
            stream__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ImgGetting(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VideoStream/ImgGetting',
            stream__pb2.Identity.SerializeToString,
            stream__pb2.MsgReply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VideoStream/Register',
            stream__pb2.Identity.SerializeToString,
            stream__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/VideoStream/CheckList',
            stream__pb2.Empty.SerializeToString,
            stream__pb2.Identity.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
